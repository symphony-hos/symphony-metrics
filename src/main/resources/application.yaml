server:
  port: 8080
  
logging:
  level:
    root: INFO
    "[org.springframework]": INFO
    "[io.symphony]": DEBUG
    "[org.springframework.cloud]": INFO
    "[org.springframework.amqp]": INFO
    "[io.micrometer]": TRACE

spring:
  jackson:
    serialization:
      INDENT_OUTPUT: true
  rabbitmq:
    host: 127.0.0.1
    username: rabbitmq
    password: rabbitmq
  cloud: 
    stream:
      function:
        definition: processPoint;publishCommand
      bindings:
        processPoint-in-0:
          destination: status
          content-type: application/json
        publishCommand-out-0:
          destination: command
          content-type: application/json
      rabbit:
        bindings:
          processPoint-in-0:
            consumer:
              exchangeType: fanout
          publishCommand-out-0:
            producer:
              exchangeType: fanout
                                                
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      defaults:
        enabled: false
      prometheus:
        enabled: true
                    
metrics:
  selector: 
    type: AnySelector
  labels:
  - name
  - area
  - floor
  - room
  - device  
  - property